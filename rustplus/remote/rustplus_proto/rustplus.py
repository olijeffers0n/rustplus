# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: rustplus.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    List,
    Optional,
)

import betterproto


class AppEntityType(betterproto.Enum):
    Unknown = 0
    Switch = 1
    Alarm = 2
    StorageMonitor = 3


class AppMarkerType(betterproto.Enum):
    Undefined = 0
    Player = 1
    Explosion = 2
    VendingMachine = 3
    CH47 = 4
    CargoShip = 5
    Crate = 6
    GenericRadius = 7
    PatrolHelicopter = 8
    TravellingVendor = 9


class AppCameraRaysEntityType(betterproto.Enum):
    Unknown = 0
    Tree = 1
    Player = 2


@dataclass(eq=False, repr=False)
class Vector2(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class Vector3(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class Vector4(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    w: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class AppMessage(betterproto.Message):
    response: Optional["AppResponse"] = betterproto.message_field(
        1, optional=True, group="_response"
    )
    broadcast: Optional["AppBroadcast"] = betterproto.message_field(
        2, optional=True, group="_broadcast"
    )


@dataclass(eq=False, repr=False)
class AppRequest(betterproto.Message):
    seq: int = betterproto.uint32_field(1)
    player_id: int = betterproto.uint64_field(2)
    player_token: int = betterproto.int32_field(3)
    entity_id: int = betterproto.uint32_field(4)
    get_info: Optional["AppEmpty"] = betterproto.message_field(
        5, optional=True, group="_getInfo"
    )
    get_time: Optional["AppEmpty"] = betterproto.message_field(
        6, optional=True, group="_getTime"
    )
    get_map: Optional["AppEmpty"] = betterproto.message_field(
        7, optional=True, group="_getMap"
    )
    get_team_info: Optional["AppEmpty"] = betterproto.message_field(
        8, optional=True, group="_getTeamInfo"
    )
    get_team_chat: Optional["AppEmpty"] = betterproto.message_field(
        9, optional=True, group="_getTeamChat"
    )
    send_team_message: Optional["AppSendMessage"] = betterproto.message_field(
        10, optional=True, group="_sendTeamMessage"
    )
    get_entity_info: Optional["AppEmpty"] = betterproto.message_field(
        11, optional=True, group="_getEntityInfo"
    )
    set_entity_value: Optional["AppSetEntityValue"] = betterproto.message_field(
        12, optional=True, group="_setEntityValue"
    )
    check_subscription: Optional["AppEmpty"] = betterproto.message_field(
        13, optional=True, group="_checkSubscription"
    )
    set_subscription: Optional["AppFlag"] = betterproto.message_field(
        14, optional=True, group="_setSubscription"
    )
    get_map_markers: Optional["AppEmpty"] = betterproto.message_field(
        15, optional=True, group="_getMapMarkers"
    )
    promote_to_leader: Optional["AppPromoteToLeader"] = betterproto.message_field(
        16, optional=True, group="_promoteToLeader"
    )
    get_clan_info: Optional["AppEmpty"] = betterproto.message_field(
        17, optional=True, group="_getClanInfo"
    )
    set_clan_motd: Optional["AppSendMessage"] = betterproto.message_field(
        18, optional=True, group="_setClanMotd"
    )
    get_clan_chat: Optional["AppEmpty"] = betterproto.message_field(
        19, optional=True, group="_getClanChat"
    )
    send_clan_message: Optional["AppSendMessage"] = betterproto.message_field(
        20, optional=True, group="_sendClanMessage"
    )
    get_nexus_auth: Optional["AppGetNexusAuth"] = betterproto.message_field(
        21, optional=True, group="_getNexusAuth"
    )
    camera_subscribe: Optional["AppCameraSubscribe"] = betterproto.message_field(
        22, optional=True, group="_cameraSubscribe"
    )
    camera_unsubscribe: Optional["AppEmpty"] = betterproto.message_field(
        23, optional=True, group="_cameraUnsubscribe"
    )
    camera_input: Optional["AppCameraInput"] = betterproto.message_field(
        24, optional=True, group="_cameraInput"
    )


@dataclass(eq=False, repr=False)
class AppBroadcast(betterproto.Message):
    team_changed: Optional["AppTeamChanged"] = betterproto.message_field(
        1, optional=True, group="_teamChanged"
    )
    team_message: Optional["AppNewTeamMessage"] = betterproto.message_field(
        2, optional=True, group="_teamMessage"
    )
    entity_changed: Optional["AppEntityChanged"] = betterproto.message_field(
        3, optional=True, group="_entityChanged"
    )
    clan_changed: Optional["AppClanChanged"] = betterproto.message_field(
        4, optional=True, group="_clanChanged"
    )
    clan_message: Optional["AppNewClanMessage"] = betterproto.message_field(
        5, optional=True, group="_clanMessage"
    )
    camera_rays: Optional["AppCameraRays"] = betterproto.message_field(
        6, optional=True, group="_cameraRays"
    )


@dataclass(eq=False, repr=False)
class AppCameraInfo(betterproto.Message):
    width: int = betterproto.int32_field(1)
    height: int = betterproto.int32_field(2)
    near_plane: float = betterproto.float_field(3)
    far_plane: float = betterproto.float_field(4)
    control_flags: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AppCameraInput(betterproto.Message):
    buttons: int = betterproto.int32_field(1)
    mouse_delta: "Vector2" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AppCameraRays(betterproto.Message):
    vertical_fov: float = betterproto.float_field(1)
    sample_offset: int = betterproto.int32_field(2)
    ray_data: bytes = betterproto.bytes_field(3)
    distance: float = betterproto.float_field(4)
    entities: List["AppCameraRaysEntity"] = betterproto.message_field(5)
    time_of_day: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class AppCameraRaysEntity(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    type: "AppCameraRaysEntityType" = betterproto.enum_field(2)
    position: "Vector3" = betterproto.message_field(3)
    rotation: "Vector3" = betterproto.message_field(4)
    size: "Vector3" = betterproto.message_field(5)
    name: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class AppCameraSubscribe(betterproto.Message):
    camera_id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AppClanChanged(betterproto.Message):
    clan_info: Optional["ClanInfo"] = betterproto.message_field(
        1, optional=True, group="_clanInfo"
    )


@dataclass(eq=False, repr=False)
class AppClanChat(betterproto.Message):
    messages: List["AppClanMessage"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AppClanInfo(betterproto.Message):
    clan_info: Optional["ClanInfo"] = betterproto.message_field(
        1, optional=True, group="_clanInfo"
    )


@dataclass(eq=False, repr=False)
class AppClanMessage(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    message: str = betterproto.string_field(3)
    time: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class AppEmpty(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AppEntityChanged(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    payload: "AppEntityPayload" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AppEntityInfo(betterproto.Message):
    type: "AppEntityType" = betterproto.enum_field(1)
    payload: "AppEntityPayload" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AppEntityPayload(betterproto.Message):
    value: bool = betterproto.bool_field(1)
    items: List["AppEntityPayloadItem"] = betterproto.message_field(2)
    capacity: int = betterproto.int32_field(3)
    has_protection: bool = betterproto.bool_field(4)
    protection_expiry: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AppEntityPayloadItem(betterproto.Message):
    item_id: int = betterproto.int32_field(1)
    quantity: int = betterproto.int32_field(2)
    item_is_blueprint: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AppError(betterproto.Message):
    error: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AppFlag(betterproto.Message):
    value: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AppGetNexusAuth(betterproto.Message):
    app_key: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AppInfo(betterproto.Message):
    name: str = betterproto.string_field(1)
    header_image: str = betterproto.string_field(2)
    url: str = betterproto.string_field(3)
    map: str = betterproto.string_field(4)
    map_size: int = betterproto.uint32_field(5)
    wipe_time: int = betterproto.uint32_field(6)
    players: int = betterproto.uint32_field(7)
    max_players: int = betterproto.uint32_field(8)
    queued_players: int = betterproto.uint32_field(9)
    seed: int = betterproto.uint32_field(10)
    salt: int = betterproto.uint32_field(11)
    logo_image: str = betterproto.string_field(12)
    nexus: str = betterproto.string_field(13)
    nexus_id: int = betterproto.int32_field(14)
    nexus_zone: str = betterproto.string_field(15)
    cameras_enabled: bool = betterproto.bool_field(16)


@dataclass(eq=False, repr=False)
class AppMap(betterproto.Message):
    width: int = betterproto.uint32_field(1)
    height: int = betterproto.uint32_field(2)
    jpg_image: List[bytes] = betterproto.bytes_field(3)
    ocean_margin: int = betterproto.int32_field(4)
    monuments: List["AppMapMonument"] = betterproto.message_field(5)
    background: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class AppMapMonument(betterproto.Message):
    token: str = betterproto.string_field(1)
    x: float = betterproto.float_field(2)
    y: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class AppMapMarkers(betterproto.Message):
    markers: List["AppMarker"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AppMarker(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    type: "AppMarkerType" = betterproto.enum_field(2)
    x: float = betterproto.float_field(3)
    y: float = betterproto.float_field(4)
    steam_id: int = betterproto.uint64_field(5)
    rotation: float = betterproto.float_field(6)
    radius: float = betterproto.float_field(7)
    color1: "Vector4" = betterproto.message_field(8)
    color2: "Vector4" = betterproto.message_field(9)
    alpha: float = betterproto.float_field(10)
    name: str = betterproto.string_field(11)
    out_of_stock: bool = betterproto.bool_field(12)
    sell_orders: List["AppMarkerSellOrder"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class AppMarkerSellOrder(betterproto.Message):
    item_id: int = betterproto.int32_field(1)
    quantity: int = betterproto.int32_field(2)
    currency_id: int = betterproto.int32_field(3)
    cost_per_item: int = betterproto.int32_field(4)
    amount_in_stock: int = betterproto.int32_field(5)
    item_is_blueprint: bool = betterproto.bool_field(6)
    currency_is_blueprint: bool = betterproto.bool_field(7)
    item_condition: float = betterproto.float_field(8)
    item_condition_max: float = betterproto.float_field(9)
    price_multiplier: float = betterproto.float_field(10)


@dataclass(eq=False, repr=False)
class AppNewClanMessage(betterproto.Message):
    clan_id: int = betterproto.int64_field(1)
    message: "AppClanMessage" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AppNewTeamMessage(betterproto.Message):
    message: "AppTeamMessage" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AppNexusAuth(betterproto.Message):
    server_id: str = betterproto.string_field(1)
    player_token: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class AppPromoteToLeader(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class AppResponse(betterproto.Message):
    seq: int = betterproto.uint32_field(1)
    success: Optional["AppSuccess"] = betterproto.message_field(
        2, optional=True, group="_success"
    )
    error: Optional["AppError"] = betterproto.message_field(
        3, optional=True, group="_error"
    )
    info: Optional["AppInfo"] = betterproto.message_field(
        4, optional=True, group="_info"
    )
    time: Optional["AppTime"] = betterproto.message_field(
        5, optional=True, group="_time"
    )
    map: Optional["AppMap"] = betterproto.message_field(6, optional=True, group="_map")
    team_info: Optional["AppTeamInfo"] = betterproto.message_field(
        7, optional=True, group="_teamInfo"
    )
    team_chat: Optional["AppTeamChat"] = betterproto.message_field(
        8, optional=True, group="_teamChat"
    )
    entity_info: Optional["AppEntityInfo"] = betterproto.message_field(
        9, optional=True, group="_entityInfo"
    )
    flag: Optional["AppFlag"] = betterproto.message_field(
        10, optional=True, group="_flag"
    )
    map_markers: Optional["AppMapMarkers"] = betterproto.message_field(
        11, optional=True, group="_mapMarkers"
    )
    clan_info: Optional["AppClanInfo"] = betterproto.message_field(
        12, optional=True, group="_clanInfo"
    )
    clan_chat: Optional["AppClanChat"] = betterproto.message_field(
        13, optional=True, group="_clanChat"
    )
    nexus_auth: Optional["AppNexusAuth"] = betterproto.message_field(
        14, optional=True, group="_nexusAuth"
    )
    camera_subscribe_info: Optional["AppCameraInfo"] = betterproto.message_field(
        15, optional=True, group="_cameraSubscribeInfo"
    )


@dataclass(eq=False, repr=False)
class AppSendMessage(betterproto.Message):
    message: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AppSetEntityValue(betterproto.Message):
    value: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AppSuccess(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AppTeamChanged(betterproto.Message):
    player_id: int = betterproto.uint64_field(1)
    team_info: "AppTeamInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AppTeamChat(betterproto.Message):
    messages: List["AppTeamMessage"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AppTeamInfo(betterproto.Message):
    leader_steam_id: int = betterproto.uint64_field(1)
    members: List["AppTeamInfoMember"] = betterproto.message_field(2)
    map_notes: List["AppTeamInfoNote"] = betterproto.message_field(3)
    leader_map_notes: List["AppTeamInfoNote"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AppTeamInfoMember(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    x: float = betterproto.float_field(3)
    y: float = betterproto.float_field(4)
    is_online: bool = betterproto.bool_field(5)
    spawn_time: int = betterproto.uint32_field(6)
    is_alive: bool = betterproto.bool_field(7)
    death_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AppTeamInfoNote(betterproto.Message):
    type: int = betterproto.int32_field(1)
    x: float = betterproto.float_field(2)
    y: float = betterproto.float_field(3)
    icon: int = betterproto.int32_field(4)
    colour_index: int = betterproto.int32_field(5)
    label: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class AppTeamMessage(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)
    name: str = betterproto.string_field(2)
    message: str = betterproto.string_field(3)
    color: str = betterproto.string_field(4)
    time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AppTime(betterproto.Message):
    day_length_minutes: float = betterproto.float_field(1)
    time_scale: float = betterproto.float_field(2)
    sunrise: float = betterproto.float_field(3)
    sunset: float = betterproto.float_field(4)
    time: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class ClanInfo(betterproto.Message):
    clan_id: int = betterproto.int64_field(1)
    name: str = betterproto.string_field(2)
    created: int = betterproto.int64_field(3)
    creator: int = betterproto.uint64_field(4)
    motd: str = betterproto.string_field(5)
    motd_timestamp: int = betterproto.int64_field(6)
    motd_author: int = betterproto.uint64_field(7)
    logo: List[bytes] = betterproto.bytes_field(8)
    color: int = betterproto.int32_field(9)
    roles: List["ClanInfoRole"] = betterproto.message_field(10)
    members: List["ClanInfoMember"] = betterproto.message_field(11)
    invites: List["ClanInfoInvite"] = betterproto.message_field(12)
    max_member_count: int = betterproto.int32_field(13)
    score: int = betterproto.int64_field(14)


@dataclass(eq=False, repr=False)
class ClanInfoInvite(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)
    recruiter: int = betterproto.uint64_field(2)
    timestamp: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class ClanInfoMember(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)
    role_id: int = betterproto.int32_field(2)
    joined: int = betterproto.int64_field(3)
    last_seen: int = betterproto.int64_field(4)
    notes: str = betterproto.string_field(5)
    online: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class ClanInfoRole(betterproto.Message):
    role_id: int = betterproto.int32_field(1)
    rank: int = betterproto.int32_field(2)
    name: str = betterproto.string_field(3)
    can_set_motd: bool = betterproto.bool_field(4)
    can_set_logo: bool = betterproto.bool_field(5)
    can_invite: bool = betterproto.bool_field(6)
    can_kick: bool = betterproto.bool_field(7)
    can_promote: bool = betterproto.bool_field(8)
    can_demote: bool = betterproto.bool_field(9)
    can_set_player_notes: bool = betterproto.bool_field(10)
    can_access_logs: bool = betterproto.bool_field(11)
    can_access_score_events: bool = betterproto.bool_field(12)
